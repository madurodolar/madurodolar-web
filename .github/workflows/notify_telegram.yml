name: Notify Telegram with Rates

on:
  schedule:
    - cron: '0 14 * * *'   # 14 UTC (9 AM EST)
    - cron: '0 21 * * *'   # 21 UTC (4 PM EST)
  workflow_dispatch:       # opcional, permite disparar manualmente también

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: false
          fetch-depth: 0

      - name: Install dependencies (jq & curl)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Send Telegram message
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          # 1) Leer price.json (de repo)
          if [[ -f price.json ]]; then
            data=$(cat price.json)
          else
            echo "price.json no existe en repo" >&2
            exit 1
          fi
          sell=$(jq -r '.sell' <<<"$data")
          buy=$(jq -r '.buy'  <<<"$data")

          # 2) Leer bcv.json
          if [[ -f bcv.json ]]; then
            bcvj=$(cat bcv.json)
          else
            echo "bcv.json no existe en repo" >&2
            exit 1
          fi
          bcv=$(jq -r '.rate'    <<<"$bcvj")
          bcvu=$(jq -r '.updated' <<<"$bcvj")

          # 3) Construir mensaje MarkdownV2 (escapa caracteres especiales)
          today=$(date +"%Y-%m-%d")
          msg="💡Valor del dólar hoy en Venezuela"
          msg+="            📊 *Mercado Binance P2P* :        "
          msg+="                       •Compra: \`${buy}\` VES             "
          msg+="                         •Venta:  \`${sell}\` VES               "
          msg+="                                🏛 *Oficial \\(BCV\\):* \`${bcv}\` VES          "
          msg+="                                📅${date_code}     "

          # 4) Enviar a Telegram
          curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_TOKEN}/sendMessage" \
               -d chat_id="${TELEGRAM_CHAT_ID}" \
               -d parse_mode=MarkdownV2 \
               -d disable_web_page_preview=true \
               --data-urlencode "text=${text}"

